{
  "version": 3,
  "sources": ["../../../src/scripts/utils/fetchData.ts", "../../../src/scripts/pages/accounts/OrderAsk.ts", "../../../src/scripts/pages/accounts/AccountItem.ts", "../../../src/scripts/pages/accounts/index.ts"],
  "sourcesContent": ["async function fetchData(url: string, marketName?: string) {\n    try {\n        let finalURL = url;\n\n        if (marketName) {\n            const params = new URLSearchParams({\n                market: marketName,\n            }).toString();\n            finalURL = `${url}?${params}`;\n        }\n\n        // const urlObject = new URL(url);\n        // if (marketName) {\n        //     urlObject.searchParams.append(\"market\", marketName);\n        // }\n\n        const response = await fetch(finalURL, { method: \"GET\" });\n        return await response.json();\n    } catch (error) {\n        console.warn(error instanceof Error ? error.message : error);\n    }\n}\n\nexport default fetchData;\n", "import fetchData from \"@src/scripts/utils/fetchData\";\n\nclass OrderAsk {\n    private market: string;\n    private askButton: HTMLButtonElement;\n    private parentElement: HTMLElement;\n    private template: HTMLTemplateElement | null;\n    private tradePrice: number;\n    private avgBuyPrice: number;\n\n    constructor(\n        market: string,\n        askButton: HTMLButtonElement,\n        parentElement: HTMLElement,\n        tradePrice: number,\n        avg_buy_price: number\n    ) {\n        this.market = market;\n        this.askButton = askButton;\n        this.parentElement = parentElement;\n        this.template = document.querySelector(\"#askOrder\");\n        this.tradePrice = tradePrice;\n        this.avgBuyPrice = avg_buy_price;\n\n        this.iniitialize();\n    }\n\n    iniitialize() {\n        this.askButton.addEventListener(\"click\", this.onClick.bind(this));\n    }\n\n    onClick() {\n        const template = this.template?.content.firstElementChild;\n        const element = template?.cloneNode(true) as HTMLElement;\n\n        this.renderOrder(element);\n        this.removeOrder(element);\n\n        this.parentElement.appendChild(element);\n    }\n\n    private async renderOrder(element: HTMLElement) {\n        this.askButton.disabled = true;\n\n        const marketName = this.market;\n\n        const data = await fetchData(\"/getChance\", marketName);\n\n        const { ask_fee, market, ask_account } = data;\n        const {\n            currency,\n            balance,\n            locked,\n            avg_buy_price,\n            avg_buy_price_modified,\n            unit_currency,\n        } = ask_account;\n\n        const askPrice = this.avgBuyPrice + this.avgBuyPrice * 0.1;\n\n        element.querySelector(\".balance .value\")!.textContent = balance;\n        element.querySelector(\".balance .unit\")!.textContent = unit_currency;\n        (element.querySelector(\".askPrice input\") as HTMLInputElement).value =\n            askPrice.toString();\n    }\n\n    private removeOrder(element: HTMLElement) {\n        const closeButton = element?.querySelector(\".closeButton\");\n        closeButton?.addEventListener(\"click\", () => {\n            this.parentElement.removeChild(element);\n            this.askButton.disabled = false;\n        });\n    }\n}\n\nexport { OrderAsk };\n", "import { OrderAsk } from \"./OrderAsk\";\n\nexport default class AccountItem {\n    private template: HTMLTemplateElement | null;\n    private market: string = \"\";\n    private totalBuyAmount = 0; // \uCD1D \uB9E4\uC218\uAE08\uC561\n    private totalGainsLosses = 0; // \uCD1D \uD3C9\uAC00\uC190\uC775\n\n    constructor() {\n        this.template = document.querySelector(\"#accountsItem\");\n    }\n\n    private toLocalStringRounded(value: number): string {\n        return Math.round(value).toLocaleString();\n    }\n\n    render(data: AccountExtend): HTMLElement | null {\n        if (!this.template) {\n            console.error(\"Template is not found.\");\n            return null;\n        }\n\n        const {\n            market,\n            avg_buy_price, // \uB9E4\uC218\uD3C9\uADE0\uAC00\n            // avg_buy_price_modified,  // \uB9E4\uC218\uD3C9\uADE0\uAC00 \uC218\uC815 \uC5EC\uBD80\n            // balance, // \uC8FC\uBB38\uAC00\uB2A5 \uAE08\uC561/\uC218\uB7C9\n            buy_price,\n            currency,\n            // locked, // \uC8FC\uBB38 \uC911 \uBB36\uC5EC\uC788\uB294 \uAE08\uC561/\uC218\uB7C9\n            unit_currency, // \uD3C9\uB2E8\uAC00 \uAE30\uC900 \uD654\uD3D0\n            volume, //  \uBCF4\uC720\uC218\uB7C9\n            trade_price, // \uD604\uC7AC \uAC00\uACA9\n        } = data;\n\n        this.market = market;\n\n        const difference = trade_price - avg_buy_price;\n        const gainsLosses = difference * volume;\n        const appraisalPrice = buy_price + gainsLosses;\n        const returnRate = (difference / avg_buy_price) * 100;\n\n        this.totalBuyAmount += buy_price;\n        this.totalGainsLosses += gainsLosses;\n\n        const values = {\n            h3: currency,\n            \".volume .value\": volume.toString(),\n            \".avgBuyPrice .value\": this.toLocalStringRounded(avg_buy_price),\n            \".buyPrice .value\": this.toLocalStringRounded(buy_price),\n            \".gainsLosses .value\": this.toLocalStringRounded(gainsLosses),\n            \".returnRate .value\": returnRate.toFixed(2),\n            \".appraisalPrice .value\": this.toLocalStringRounded(appraisalPrice),\n        };\n\n        const template = this.template.content.firstElementChild;\n        const element = template?.cloneNode(true) as HTMLElement;\n\n        for (const [selector, value] of Object.entries(values)) {\n            element.querySelector(selector)!.textContent = value;\n        }\n\n        element.querySelectorAll(\".unit\").forEach((el) => {\n            el.textContent = unit_currency;\n        });\n\n        this.handleOrder(element, trade_price, avg_buy_price);\n\n        return element;\n    }\n\n    handleOrder(\n        element: HTMLElement,\n        trade_price: number,\n        avg_buy_price: number\n    ) {\n        const askButton = element.querySelector(\n            \".askButton\"\n        ) as HTMLButtonElement;\n        new OrderAsk(\n            this.market,\n            askButton,\n            element,\n            trade_price,\n            avg_buy_price\n        );\n    }\n\n    tradeAsset(asset: Asset) {\n        const { balance, locked } = asset;\n        const amount = Number(balance) + Number(locked); // \uBCF4\uC720 KRW\n        const totalAmount = this.totalBuyAmount + amount; // \uCD1D \uBCF4\uC720\uC790\uC0B0\n        const totalAppraisalPrice = this.totalBuyAmount + this.totalGainsLosses; // \uCD1D \uD3C9\uAC00\uAE08\uC561\n        const totalReturnRate =\n            (this.totalGainsLosses / this.totalBuyAmount) * 100; // \uCD1D \uD3C9\uAC00\uC218\uC775\uB960\n\n        const values = {\n            \".amount .value\": Math.round(amount).toLocaleString(),\n            \".totalAmount .value\": Math.round(totalAmount).toLocaleString(),\n            \".totalBuyAmount .value\": Math.round(\n                this.totalBuyAmount\n            ).toLocaleString(),\n            \".totalGainsLosses .value\": Math.round(\n                this.totalGainsLosses\n            ).toLocaleString(),\n            \".totalAppraisalPrice .value\":\n                Math.round(totalAppraisalPrice).toLocaleString(),\n            \".totalReturnRate .value\": totalReturnRate.toFixed(2),\n        };\n\n        for (const [selector, value] of Object.entries(values)) {\n            document.querySelector(selector)!.textContent = value;\n        }\n    }\n}\n", "import AccountItem from \"./AccountItem\";\nimport fetchData from \"@src/scripts/utils/fetchData\";\n\nclass AccountManager {\n    constructor() {\n        this.initializeAccounts();\n    }\n\n    private async initializeAccounts() {\n        const { krwAsset, myMarkets } = await fetchData(\"/getAccounts\");\n        this.updateAccountsWithTickers(myMarkets, krwAsset);\n    }\n\n    private async updateAccountsWithTickers(\n        myAccounts: Account[],\n        krwAsset: Asset\n    ) {\n        const tickers = await fetchData(\"/getTickers\");\n\n        this.combineAccountsWithTickers(myAccounts, tickers, krwAsset);\n    }\n\n    private combineAccountsWithTickers(\n        myAccounts: Account[],\n        ticekrs: Ticker[],\n        krwAsset: Asset\n    ) {\n        try {\n            const data = myAccounts.map((account, index) => {\n                const { trade_price } = ticekrs[index];\n                return {\n                    ...account,\n                    trade_price,\n                };\n            });\n\n            this.displayAccounts(data, krwAsset);\n        } catch (error) {\n            console.error(error instanceof Error ? error.message : error);\n            this.displayAccountsFail();\n        }\n    }\n\n    private displayAccounts(myAccounts: AccountExtend[], krwAsset: Asset) {\n        const accountItem = new AccountItem();\n        const fragment = new DocumentFragment();\n\n        myAccounts\n            .map((account) => accountItem.render(account))\n            .forEach((element) => fragment.appendChild(element!));\n\n        document.querySelector(\".accountsList\")?.appendChild(fragment);\n\n        accountItem.tradeAsset(krwAsset);\n    }\n\n    private displayAccountsFail() {\n        document.querySelector(\".tradeState\")!.textContent =\n            \"\uC790\uB8CC\uB97C \uAC00\uC838\uC624\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.\";\n    }\n}\n\nnew AccountManager();\n"],
  "mappings": "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",
  "names": []
}
